// Generated code, do not touch

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/massix/chaos-monkey/internal/apis/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ChaosMonkeyConfigurationLister helps list ChaosMonkeyConfigurations.
// All objects returned here must be treated as read-only.
type ChaosMonkeyConfigurationLister interface {
	// List lists all ChaosMonkeyConfigurations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ChaosMonkeyConfiguration, err error)
	// ChaosMonkeyConfigurations returns an object that can list and get ChaosMonkeyConfigurations.
	ChaosMonkeyConfigurations(namespace string) ChaosMonkeyConfigurationNamespaceLister
	ChaosMonkeyConfigurationListerExpansion
}

// chaosMonkeyConfigurationLister implements the ChaosMonkeyConfigurationLister interface.
type chaosMonkeyConfigurationLister struct {
	indexer cache.Indexer
}

// NewChaosMonkeyConfigurationLister returns a new ChaosMonkeyConfigurationLister.
func NewChaosMonkeyConfigurationLister(indexer cache.Indexer) ChaosMonkeyConfigurationLister {
	return &chaosMonkeyConfigurationLister{indexer: indexer}
}

// List lists all ChaosMonkeyConfigurations in the indexer.
func (s *chaosMonkeyConfigurationLister) List(selector labels.Selector) (ret []*v1.ChaosMonkeyConfiguration, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ChaosMonkeyConfiguration))
	})
	return ret, err
}

// ChaosMonkeyConfigurations returns an object that can list and get ChaosMonkeyConfigurations.
func (s *chaosMonkeyConfigurationLister) ChaosMonkeyConfigurations(namespace string) ChaosMonkeyConfigurationNamespaceLister {
	return chaosMonkeyConfigurationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ChaosMonkeyConfigurationNamespaceLister helps list and get ChaosMonkeyConfigurations.
// All objects returned here must be treated as read-only.
type ChaosMonkeyConfigurationNamespaceLister interface {
	// List lists all ChaosMonkeyConfigurations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ChaosMonkeyConfiguration, err error)
	// Get retrieves the ChaosMonkeyConfiguration from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.ChaosMonkeyConfiguration, error)
	ChaosMonkeyConfigurationNamespaceListerExpansion
}

// chaosMonkeyConfigurationNamespaceLister implements the ChaosMonkeyConfigurationNamespaceLister
// interface.
type chaosMonkeyConfigurationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ChaosMonkeyConfigurations in the indexer for a given namespace.
func (s chaosMonkeyConfigurationNamespaceLister) List(selector labels.Selector) (ret []*v1.ChaosMonkeyConfiguration, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ChaosMonkeyConfiguration))
	})
	return ret, err
}

// Get retrieves the ChaosMonkeyConfiguration from the indexer for a given namespace and name.
func (s chaosMonkeyConfigurationNamespaceLister) Get(name string) (*v1.ChaosMonkeyConfiguration, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("chaosmonkeyconfiguration"), name)
	}
	return obj.(*v1.ChaosMonkeyConfiguration), nil
}
